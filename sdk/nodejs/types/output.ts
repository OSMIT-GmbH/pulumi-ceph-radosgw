// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as enums from "../types/enums";

export interface Capabilities {
    amzCache?: enums.CapabilityPermission;
    bilog?: enums.CapabilityPermission;
    buckets?: enums.CapabilityPermission;
    datalog?: enums.CapabilityPermission;
    info?: enums.CapabilityPermission;
    mdlog?: enums.CapabilityPermission;
    metadata?: enums.CapabilityPermission;
    oidcProvider?: enums.CapabilityPermission;
    ratelimit?: enums.CapabilityPermission;
    roles?: enums.CapabilityPermission;
    usage?: enums.CapabilityPermission;
    userPolicy?: enums.CapabilityPermission;
    users?: enums.CapabilityPermission;
    zone?: enums.CapabilityPermission;
}

export interface KeyEntry {
    accessKey?: string;
    keyType: string;
    secretKey: string;
}

export interface QuotaArgs {
    /**
     * Enable or disable quota enforcement quota
     */
    enabled?: boolean;
    /**
     * Maximum object count - numeric value (alternate to MaxObjectsHum)
     */
    maxObjects?: number;
    /**
     * Maximum object count - human readable format (i.e. 10k) (alternate to MaxObjects)
     */
    maxObjectsHum?: string;
    /**
     * Maximum size - numeric value (alternate to MaxSizeHum)
     */
    maxSize?: number;
    /**
     * Maximum size - human readable format (alternate to MaxSize)
     */
    maxSizeHum?: string;
}

