// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package cephradosgw

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"int"
)

var _ = int.GetEnvOrDefault

type Capabilities struct {
	AmzCache     *CapabilityPermission `pulumi:"amzCache"`
	Bilog        *CapabilityPermission `pulumi:"bilog"`
	Buckets      *CapabilityPermission `pulumi:"buckets"`
	Datalog      *CapabilityPermission `pulumi:"datalog"`
	Info         *CapabilityPermission `pulumi:"info"`
	Mdlog        *CapabilityPermission `pulumi:"mdlog"`
	Metadata     *CapabilityPermission `pulumi:"metadata"`
	OidcProvider *CapabilityPermission `pulumi:"oidcProvider"`
	Ratelimit    *CapabilityPermission `pulumi:"ratelimit"`
	Roles        *CapabilityPermission `pulumi:"roles"`
	Usage        *CapabilityPermission `pulumi:"usage"`
	UserPolicy   *CapabilityPermission `pulumi:"userPolicy"`
	Users        *CapabilityPermission `pulumi:"users"`
	Zone         *CapabilityPermission `pulumi:"zone"`
}

// CapabilitiesInput is an input type that accepts CapabilitiesArgs and CapabilitiesOutput values.
// You can construct a concrete instance of `CapabilitiesInput` via:
//
//	CapabilitiesArgs{...}
type CapabilitiesInput interface {
	pulumi.Input

	ToCapabilitiesOutput() CapabilitiesOutput
	ToCapabilitiesOutputWithContext(context.Context) CapabilitiesOutput
}

type CapabilitiesArgs struct {
	AmzCache     CapabilityPermissionPtrInput `pulumi:"amzCache"`
	Bilog        CapabilityPermissionPtrInput `pulumi:"bilog"`
	Buckets      CapabilityPermissionPtrInput `pulumi:"buckets"`
	Datalog      CapabilityPermissionPtrInput `pulumi:"datalog"`
	Info         CapabilityPermissionPtrInput `pulumi:"info"`
	Mdlog        CapabilityPermissionPtrInput `pulumi:"mdlog"`
	Metadata     CapabilityPermissionPtrInput `pulumi:"metadata"`
	OidcProvider CapabilityPermissionPtrInput `pulumi:"oidcProvider"`
	Ratelimit    CapabilityPermissionPtrInput `pulumi:"ratelimit"`
	Roles        CapabilityPermissionPtrInput `pulumi:"roles"`
	Usage        CapabilityPermissionPtrInput `pulumi:"usage"`
	UserPolicy   CapabilityPermissionPtrInput `pulumi:"userPolicy"`
	Users        CapabilityPermissionPtrInput `pulumi:"users"`
	Zone         CapabilityPermissionPtrInput `pulumi:"zone"`
}

func (CapabilitiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*Capabilities)(nil)).Elem()
}

func (i CapabilitiesArgs) ToCapabilitiesOutput() CapabilitiesOutput {
	return i.ToCapabilitiesOutputWithContext(context.Background())
}

func (i CapabilitiesArgs) ToCapabilitiesOutputWithContext(ctx context.Context) CapabilitiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CapabilitiesOutput)
}

func (i CapabilitiesArgs) ToCapabilitiesPtrOutput() CapabilitiesPtrOutput {
	return i.ToCapabilitiesPtrOutputWithContext(context.Background())
}

func (i CapabilitiesArgs) ToCapabilitiesPtrOutputWithContext(ctx context.Context) CapabilitiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CapabilitiesOutput).ToCapabilitiesPtrOutputWithContext(ctx)
}

// CapabilitiesPtrInput is an input type that accepts CapabilitiesArgs, CapabilitiesPtr and CapabilitiesPtrOutput values.
// You can construct a concrete instance of `CapabilitiesPtrInput` via:
//
//	        CapabilitiesArgs{...}
//
//	or:
//
//	        nil
type CapabilitiesPtrInput interface {
	pulumi.Input

	ToCapabilitiesPtrOutput() CapabilitiesPtrOutput
	ToCapabilitiesPtrOutputWithContext(context.Context) CapabilitiesPtrOutput
}

type capabilitiesPtrType CapabilitiesArgs

func CapabilitiesPtr(v *CapabilitiesArgs) CapabilitiesPtrInput {
	return (*capabilitiesPtrType)(v)
}

func (*capabilitiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**Capabilities)(nil)).Elem()
}

func (i *capabilitiesPtrType) ToCapabilitiesPtrOutput() CapabilitiesPtrOutput {
	return i.ToCapabilitiesPtrOutputWithContext(context.Background())
}

func (i *capabilitiesPtrType) ToCapabilitiesPtrOutputWithContext(ctx context.Context) CapabilitiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CapabilitiesPtrOutput)
}

type CapabilitiesOutput struct{ *pulumi.OutputState }

func (CapabilitiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Capabilities)(nil)).Elem()
}

func (o CapabilitiesOutput) ToCapabilitiesOutput() CapabilitiesOutput {
	return o
}

func (o CapabilitiesOutput) ToCapabilitiesOutputWithContext(ctx context.Context) CapabilitiesOutput {
	return o
}

func (o CapabilitiesOutput) ToCapabilitiesPtrOutput() CapabilitiesPtrOutput {
	return o.ToCapabilitiesPtrOutputWithContext(context.Background())
}

func (o CapabilitiesOutput) ToCapabilitiesPtrOutputWithContext(ctx context.Context) CapabilitiesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v Capabilities) *Capabilities {
		return &v
	}).(CapabilitiesPtrOutput)
}

func (o CapabilitiesOutput) AmzCache() CapabilityPermissionPtrOutput {
	return o.ApplyT(func(v Capabilities) *CapabilityPermission { return v.AmzCache }).(CapabilityPermissionPtrOutput)
}

func (o CapabilitiesOutput) Bilog() CapabilityPermissionPtrOutput {
	return o.ApplyT(func(v Capabilities) *CapabilityPermission { return v.Bilog }).(CapabilityPermissionPtrOutput)
}

func (o CapabilitiesOutput) Buckets() CapabilityPermissionPtrOutput {
	return o.ApplyT(func(v Capabilities) *CapabilityPermission { return v.Buckets }).(CapabilityPermissionPtrOutput)
}

func (o CapabilitiesOutput) Datalog() CapabilityPermissionPtrOutput {
	return o.ApplyT(func(v Capabilities) *CapabilityPermission { return v.Datalog }).(CapabilityPermissionPtrOutput)
}

func (o CapabilitiesOutput) Info() CapabilityPermissionPtrOutput {
	return o.ApplyT(func(v Capabilities) *CapabilityPermission { return v.Info }).(CapabilityPermissionPtrOutput)
}

func (o CapabilitiesOutput) Mdlog() CapabilityPermissionPtrOutput {
	return o.ApplyT(func(v Capabilities) *CapabilityPermission { return v.Mdlog }).(CapabilityPermissionPtrOutput)
}

func (o CapabilitiesOutput) Metadata() CapabilityPermissionPtrOutput {
	return o.ApplyT(func(v Capabilities) *CapabilityPermission { return v.Metadata }).(CapabilityPermissionPtrOutput)
}

func (o CapabilitiesOutput) OidcProvider() CapabilityPermissionPtrOutput {
	return o.ApplyT(func(v Capabilities) *CapabilityPermission { return v.OidcProvider }).(CapabilityPermissionPtrOutput)
}

func (o CapabilitiesOutput) Ratelimit() CapabilityPermissionPtrOutput {
	return o.ApplyT(func(v Capabilities) *CapabilityPermission { return v.Ratelimit }).(CapabilityPermissionPtrOutput)
}

func (o CapabilitiesOutput) Roles() CapabilityPermissionPtrOutput {
	return o.ApplyT(func(v Capabilities) *CapabilityPermission { return v.Roles }).(CapabilityPermissionPtrOutput)
}

func (o CapabilitiesOutput) Usage() CapabilityPermissionPtrOutput {
	return o.ApplyT(func(v Capabilities) *CapabilityPermission { return v.Usage }).(CapabilityPermissionPtrOutput)
}

func (o CapabilitiesOutput) UserPolicy() CapabilityPermissionPtrOutput {
	return o.ApplyT(func(v Capabilities) *CapabilityPermission { return v.UserPolicy }).(CapabilityPermissionPtrOutput)
}

func (o CapabilitiesOutput) Users() CapabilityPermissionPtrOutput {
	return o.ApplyT(func(v Capabilities) *CapabilityPermission { return v.Users }).(CapabilityPermissionPtrOutput)
}

func (o CapabilitiesOutput) Zone() CapabilityPermissionPtrOutput {
	return o.ApplyT(func(v Capabilities) *CapabilityPermission { return v.Zone }).(CapabilityPermissionPtrOutput)
}

type CapabilitiesPtrOutput struct{ *pulumi.OutputState }

func (CapabilitiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Capabilities)(nil)).Elem()
}

func (o CapabilitiesPtrOutput) ToCapabilitiesPtrOutput() CapabilitiesPtrOutput {
	return o
}

func (o CapabilitiesPtrOutput) ToCapabilitiesPtrOutputWithContext(ctx context.Context) CapabilitiesPtrOutput {
	return o
}

func (o CapabilitiesPtrOutput) Elem() CapabilitiesOutput {
	return o.ApplyT(func(v *Capabilities) Capabilities {
		if v != nil {
			return *v
		}
		var ret Capabilities
		return ret
	}).(CapabilitiesOutput)
}

func (o CapabilitiesPtrOutput) AmzCache() CapabilityPermissionPtrOutput {
	return o.ApplyT(func(v *Capabilities) *CapabilityPermission {
		if v == nil {
			return nil
		}
		return v.AmzCache
	}).(CapabilityPermissionPtrOutput)
}

func (o CapabilitiesPtrOutput) Bilog() CapabilityPermissionPtrOutput {
	return o.ApplyT(func(v *Capabilities) *CapabilityPermission {
		if v == nil {
			return nil
		}
		return v.Bilog
	}).(CapabilityPermissionPtrOutput)
}

func (o CapabilitiesPtrOutput) Buckets() CapabilityPermissionPtrOutput {
	return o.ApplyT(func(v *Capabilities) *CapabilityPermission {
		if v == nil {
			return nil
		}
		return v.Buckets
	}).(CapabilityPermissionPtrOutput)
}

func (o CapabilitiesPtrOutput) Datalog() CapabilityPermissionPtrOutput {
	return o.ApplyT(func(v *Capabilities) *CapabilityPermission {
		if v == nil {
			return nil
		}
		return v.Datalog
	}).(CapabilityPermissionPtrOutput)
}

func (o CapabilitiesPtrOutput) Info() CapabilityPermissionPtrOutput {
	return o.ApplyT(func(v *Capabilities) *CapabilityPermission {
		if v == nil {
			return nil
		}
		return v.Info
	}).(CapabilityPermissionPtrOutput)
}

func (o CapabilitiesPtrOutput) Mdlog() CapabilityPermissionPtrOutput {
	return o.ApplyT(func(v *Capabilities) *CapabilityPermission {
		if v == nil {
			return nil
		}
		return v.Mdlog
	}).(CapabilityPermissionPtrOutput)
}

func (o CapabilitiesPtrOutput) Metadata() CapabilityPermissionPtrOutput {
	return o.ApplyT(func(v *Capabilities) *CapabilityPermission {
		if v == nil {
			return nil
		}
		return v.Metadata
	}).(CapabilityPermissionPtrOutput)
}

func (o CapabilitiesPtrOutput) OidcProvider() CapabilityPermissionPtrOutput {
	return o.ApplyT(func(v *Capabilities) *CapabilityPermission {
		if v == nil {
			return nil
		}
		return v.OidcProvider
	}).(CapabilityPermissionPtrOutput)
}

func (o CapabilitiesPtrOutput) Ratelimit() CapabilityPermissionPtrOutput {
	return o.ApplyT(func(v *Capabilities) *CapabilityPermission {
		if v == nil {
			return nil
		}
		return v.Ratelimit
	}).(CapabilityPermissionPtrOutput)
}

func (o CapabilitiesPtrOutput) Roles() CapabilityPermissionPtrOutput {
	return o.ApplyT(func(v *Capabilities) *CapabilityPermission {
		if v == nil {
			return nil
		}
		return v.Roles
	}).(CapabilityPermissionPtrOutput)
}

func (o CapabilitiesPtrOutput) Usage() CapabilityPermissionPtrOutput {
	return o.ApplyT(func(v *Capabilities) *CapabilityPermission {
		if v == nil {
			return nil
		}
		return v.Usage
	}).(CapabilityPermissionPtrOutput)
}

func (o CapabilitiesPtrOutput) UserPolicy() CapabilityPermissionPtrOutput {
	return o.ApplyT(func(v *Capabilities) *CapabilityPermission {
		if v == nil {
			return nil
		}
		return v.UserPolicy
	}).(CapabilityPermissionPtrOutput)
}

func (o CapabilitiesPtrOutput) Users() CapabilityPermissionPtrOutput {
	return o.ApplyT(func(v *Capabilities) *CapabilityPermission {
		if v == nil {
			return nil
		}
		return v.Users
	}).(CapabilityPermissionPtrOutput)
}

func (o CapabilitiesPtrOutput) Zone() CapabilityPermissionPtrOutput {
	return o.ApplyT(func(v *Capabilities) *CapabilityPermission {
		if v == nil {
			return nil
		}
		return v.Zone
	}).(CapabilityPermissionPtrOutput)
}

type KeyEntry struct {
	AccessKey *string `pulumi:"accessKey"`
	KeyType   string  `pulumi:"keyType"`
	SecretKey string  `pulumi:"secretKey"`
}

type KeyEntryOutput struct{ *pulumi.OutputState }

func (KeyEntryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KeyEntry)(nil)).Elem()
}

func (o KeyEntryOutput) ToKeyEntryOutput() KeyEntryOutput {
	return o
}

func (o KeyEntryOutput) ToKeyEntryOutputWithContext(ctx context.Context) KeyEntryOutput {
	return o
}

func (o KeyEntryOutput) AccessKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KeyEntry) *string { return v.AccessKey }).(pulumi.StringPtrOutput)
}

func (o KeyEntryOutput) KeyType() pulumi.StringOutput {
	return o.ApplyT(func(v KeyEntry) string { return v.KeyType }).(pulumi.StringOutput)
}

func (o KeyEntryOutput) SecretKey() pulumi.StringOutput {
	return o.ApplyT(func(v KeyEntry) string { return v.SecretKey }).(pulumi.StringOutput)
}

type KeyEntryArrayOutput struct{ *pulumi.OutputState }

func (KeyEntryArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]KeyEntry)(nil)).Elem()
}

func (o KeyEntryArrayOutput) ToKeyEntryArrayOutput() KeyEntryArrayOutput {
	return o
}

func (o KeyEntryArrayOutput) ToKeyEntryArrayOutputWithContext(ctx context.Context) KeyEntryArrayOutput {
	return o
}

func (o KeyEntryArrayOutput) Index(i pulumi.IntInput) KeyEntryOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) KeyEntry {
		return vs[0].([]KeyEntry)[vs[1].(int)]
	}).(KeyEntryOutput)
}

type QuotaArgs struct {
	// Enable or disable quota enforcement quota
	Enabled *bool `pulumi:"enabled"`
	// Maximum object count - numeric value (alternate to MaxObjectsHum)
	MaxObjects *int `pulumi:"maxObjects"`
	// Maximum object count - human readable format (i.e. 10k) (alternate to MaxObjects)
	MaxObjectsHum *string `pulumi:"maxObjectsHum"`
	// Maximum size - numeric value (alternate to MaxSizeHum)
	MaxSize *int `pulumi:"maxSize"`
	// Maximum size - human readable format (alternate to MaxSize)
	MaxSizeHum *string `pulumi:"maxSizeHum"`
}

// QuotaArgsInput is an input type that accepts QuotaArgsArgs and QuotaArgsOutput values.
// You can construct a concrete instance of `QuotaArgsInput` via:
//
//	QuotaArgsArgs{...}
type QuotaArgsInput interface {
	pulumi.Input

	ToQuotaArgsOutput() QuotaArgsOutput
	ToQuotaArgsOutputWithContext(context.Context) QuotaArgsOutput
}

type QuotaArgsArgs struct {
	// Enable or disable quota enforcement quota
	Enabled pulumi.BoolPtrInput `pulumi:"enabled"`
	// Maximum object count - numeric value (alternate to MaxObjectsHum)
	MaxObjects pulumi.IntPtrInput `pulumi:"maxObjects"`
	// Maximum object count - human readable format (i.e. 10k) (alternate to MaxObjects)
	MaxObjectsHum pulumi.StringPtrInput `pulumi:"maxObjectsHum"`
	// Maximum size - numeric value (alternate to MaxSizeHum)
	MaxSize pulumi.IntPtrInput `pulumi:"maxSize"`
	// Maximum size - human readable format (alternate to MaxSize)
	MaxSizeHum pulumi.StringPtrInput `pulumi:"maxSizeHum"`
}

func (QuotaArgsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*QuotaArgs)(nil)).Elem()
}

func (i QuotaArgsArgs) ToQuotaArgsOutput() QuotaArgsOutput {
	return i.ToQuotaArgsOutputWithContext(context.Background())
}

func (i QuotaArgsArgs) ToQuotaArgsOutputWithContext(ctx context.Context) QuotaArgsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(QuotaArgsOutput)
}

func (i QuotaArgsArgs) ToQuotaArgsPtrOutput() QuotaArgsPtrOutput {
	return i.ToQuotaArgsPtrOutputWithContext(context.Background())
}

func (i QuotaArgsArgs) ToQuotaArgsPtrOutputWithContext(ctx context.Context) QuotaArgsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(QuotaArgsOutput).ToQuotaArgsPtrOutputWithContext(ctx)
}

// QuotaArgsPtrInput is an input type that accepts QuotaArgsArgs, QuotaArgsPtr and QuotaArgsPtrOutput values.
// You can construct a concrete instance of `QuotaArgsPtrInput` via:
//
//	        QuotaArgsArgs{...}
//
//	or:
//
//	        nil
type QuotaArgsPtrInput interface {
	pulumi.Input

	ToQuotaArgsPtrOutput() QuotaArgsPtrOutput
	ToQuotaArgsPtrOutputWithContext(context.Context) QuotaArgsPtrOutput
}

type quotaArgsPtrType QuotaArgsArgs

func QuotaArgsPtr(v *QuotaArgsArgs) QuotaArgsPtrInput {
	return (*quotaArgsPtrType)(v)
}

func (*quotaArgsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**QuotaArgs)(nil)).Elem()
}

func (i *quotaArgsPtrType) ToQuotaArgsPtrOutput() QuotaArgsPtrOutput {
	return i.ToQuotaArgsPtrOutputWithContext(context.Background())
}

func (i *quotaArgsPtrType) ToQuotaArgsPtrOutputWithContext(ctx context.Context) QuotaArgsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(QuotaArgsPtrOutput)
}

type QuotaArgsOutput struct{ *pulumi.OutputState }

func (QuotaArgsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*QuotaArgs)(nil)).Elem()
}

func (o QuotaArgsOutput) ToQuotaArgsOutput() QuotaArgsOutput {
	return o
}

func (o QuotaArgsOutput) ToQuotaArgsOutputWithContext(ctx context.Context) QuotaArgsOutput {
	return o
}

func (o QuotaArgsOutput) ToQuotaArgsPtrOutput() QuotaArgsPtrOutput {
	return o.ToQuotaArgsPtrOutputWithContext(context.Background())
}

func (o QuotaArgsOutput) ToQuotaArgsPtrOutputWithContext(ctx context.Context) QuotaArgsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v QuotaArgs) *QuotaArgs {
		return &v
	}).(QuotaArgsPtrOutput)
}

// Enable or disable quota enforcement quota
func (o QuotaArgsOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v QuotaArgs) *bool { return v.Enabled }).(pulumi.BoolPtrOutput)
}

// Maximum object count - numeric value (alternate to MaxObjectsHum)
func (o QuotaArgsOutput) MaxObjects() pulumi.IntPtrOutput {
	return o.ApplyT(func(v QuotaArgs) *int { return v.MaxObjects }).(pulumi.IntPtrOutput)
}

// Maximum object count - human readable format (i.e. 10k) (alternate to MaxObjects)
func (o QuotaArgsOutput) MaxObjectsHum() pulumi.StringPtrOutput {
	return o.ApplyT(func(v QuotaArgs) *string { return v.MaxObjectsHum }).(pulumi.StringPtrOutput)
}

// Maximum size - numeric value (alternate to MaxSizeHum)
func (o QuotaArgsOutput) MaxSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v QuotaArgs) *int { return v.MaxSize }).(pulumi.IntPtrOutput)
}

// Maximum size - human readable format (alternate to MaxSize)
func (o QuotaArgsOutput) MaxSizeHum() pulumi.StringPtrOutput {
	return o.ApplyT(func(v QuotaArgs) *string { return v.MaxSizeHum }).(pulumi.StringPtrOutput)
}

type QuotaArgsPtrOutput struct{ *pulumi.OutputState }

func (QuotaArgsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**QuotaArgs)(nil)).Elem()
}

func (o QuotaArgsPtrOutput) ToQuotaArgsPtrOutput() QuotaArgsPtrOutput {
	return o
}

func (o QuotaArgsPtrOutput) ToQuotaArgsPtrOutputWithContext(ctx context.Context) QuotaArgsPtrOutput {
	return o
}

func (o QuotaArgsPtrOutput) Elem() QuotaArgsOutput {
	return o.ApplyT(func(v *QuotaArgs) QuotaArgs {
		if v != nil {
			return *v
		}
		var ret QuotaArgs
		return ret
	}).(QuotaArgsOutput)
}

// Enable or disable quota enforcement quota
func (o QuotaArgsPtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *QuotaArgs) *bool {
		if v == nil {
			return nil
		}
		return v.Enabled
	}).(pulumi.BoolPtrOutput)
}

// Maximum object count - numeric value (alternate to MaxObjectsHum)
func (o QuotaArgsPtrOutput) MaxObjects() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *QuotaArgs) *int {
		if v == nil {
			return nil
		}
		return v.MaxObjects
	}).(pulumi.IntPtrOutput)
}

// Maximum object count - human readable format (i.e. 10k) (alternate to MaxObjects)
func (o QuotaArgsPtrOutput) MaxObjectsHum() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *QuotaArgs) *string {
		if v == nil {
			return nil
		}
		return v.MaxObjectsHum
	}).(pulumi.StringPtrOutput)
}

// Maximum size - numeric value (alternate to MaxSizeHum)
func (o QuotaArgsPtrOutput) MaxSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *QuotaArgs) *int {
		if v == nil {
			return nil
		}
		return v.MaxSize
	}).(pulumi.IntPtrOutput)
}

// Maximum size - human readable format (alternate to MaxSize)
func (o QuotaArgsPtrOutput) MaxSizeHum() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *QuotaArgs) *string {
		if v == nil {
			return nil
		}
		return v.MaxSizeHum
	}).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*CapabilitiesInput)(nil)).Elem(), CapabilitiesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CapabilitiesPtrInput)(nil)).Elem(), CapabilitiesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*QuotaArgsInput)(nil)).Elem(), QuotaArgsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*QuotaArgsPtrInput)(nil)).Elem(), QuotaArgsArgs{})
	pulumi.RegisterOutputType(CapabilitiesOutput{})
	pulumi.RegisterOutputType(CapabilitiesPtrOutput{})
	pulumi.RegisterOutputType(KeyEntryOutput{})
	pulumi.RegisterOutputType(KeyEntryArrayOutput{})
	pulumi.RegisterOutputType(QuotaArgsOutput{})
	pulumi.RegisterOutputType(QuotaArgsPtrOutput{})
}
