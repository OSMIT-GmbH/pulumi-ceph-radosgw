// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package cephradosgw

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"int"
)

type Provider struct {
	pulumi.ProviderResourceState

	// The username. It's important but not secret.
	AccessKeyID pulumi.StringOutput `pulumi:"accessKeyID"`
	// Assimilate an existing object during create
	Assimilate pulumi.StringPtrOutput `pulumi:"assimilate"`
	// Delete assimilated objects during delete (otherwise they would be kept on OpenZiti)
	DeleteAssimilated pulumi.StringPtrOutput `pulumi:"deleteAssimilated"`
	// The URI to the API
	Endpoint pulumi.StringOutput `pulumi:"endpoint"`
	// The password. It is very secret.
	SecretAccessKey pulumi.StringOutput    `pulumi:"secretAccessKey"`
	Version         pulumi.StringPtrOutput `pulumi:"version"`
}

// NewProvider registers a new resource with the given unique name, arguments, and options.
func NewProvider(ctx *pulumi.Context,
	name string, args *ProviderArgs, opts ...pulumi.ResourceOption) (*Provider, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.AccessKeyID == nil {
		return nil, errors.New("invalid value for required argument 'AccessKeyID'")
	}
	if args.Endpoint == nil {
		return nil, errors.New("invalid value for required argument 'Endpoint'")
	}
	if args.SecretAccessKey == nil {
		return nil, errors.New("invalid value for required argument 'SecretAccessKey'")
	}
	if args.SecretAccessKey != nil {
		args.SecretAccessKey = pulumi.ToSecret(args.SecretAccessKey).(pulumi.StringInput)
	}
	secrets := pulumi.AdditionalSecretOutputs([]string{
		"secretAccessKey",
	})
	opts = append(opts, secrets)
	opts = int.PkgResourceDefaultOpts(opts)
	var resource Provider
	err := ctx.RegisterResource("pulumi:providers:ceph-radosgw", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

type providerArgs struct {
	// The username. It's important but not secret.
	AccessKeyID string `pulumi:"accessKeyID"`
	// Assimilate an existing object during create
	Assimilate *string `pulumi:"assimilate"`
	// Delete assimilated objects during delete (otherwise they would be kept on OpenZiti)
	DeleteAssimilated *string `pulumi:"deleteAssimilated"`
	// The URI to the API
	Endpoint string `pulumi:"endpoint"`
	// The password. It is very secret.
	SecretAccessKey string  `pulumi:"secretAccessKey"`
	Version         *string `pulumi:"version"`
}

// The set of arguments for constructing a Provider resource.
type ProviderArgs struct {
	// The username. It's important but not secret.
	AccessKeyID pulumi.StringInput
	// Assimilate an existing object during create
	Assimilate pulumi.StringPtrInput
	// Delete assimilated objects during delete (otherwise they would be kept on OpenZiti)
	DeleteAssimilated pulumi.StringPtrInput
	// The URI to the API
	Endpoint pulumi.StringInput
	// The password. It is very secret.
	SecretAccessKey pulumi.StringInput
	Version         pulumi.StringPtrInput
}

func (ProviderArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*providerArgs)(nil)).Elem()
}

type ProviderInput interface {
	pulumi.Input

	ToProviderOutput() ProviderOutput
	ToProviderOutputWithContext(ctx context.Context) ProviderOutput
}

func (*Provider) ElementType() reflect.Type {
	return reflect.TypeOf((**Provider)(nil)).Elem()
}

func (i *Provider) ToProviderOutput() ProviderOutput {
	return i.ToProviderOutputWithContext(context.Background())
}

func (i *Provider) ToProviderOutputWithContext(ctx context.Context) ProviderOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProviderOutput)
}

type ProviderOutput struct{ *pulumi.OutputState }

func (ProviderOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Provider)(nil)).Elem()
}

func (o ProviderOutput) ToProviderOutput() ProviderOutput {
	return o
}

func (o ProviderOutput) ToProviderOutputWithContext(ctx context.Context) ProviderOutput {
	return o
}

// The username. It's important but not secret.
func (o ProviderOutput) AccessKeyID() pulumi.StringOutput {
	return o.ApplyT(func(v *Provider) pulumi.StringOutput { return v.AccessKeyID }).(pulumi.StringOutput)
}

// Assimilate an existing object during create
func (o ProviderOutput) Assimilate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Provider) pulumi.StringPtrOutput { return v.Assimilate }).(pulumi.StringPtrOutput)
}

// Delete assimilated objects during delete (otherwise they would be kept on OpenZiti)
func (o ProviderOutput) DeleteAssimilated() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Provider) pulumi.StringPtrOutput { return v.DeleteAssimilated }).(pulumi.StringPtrOutput)
}

// The URI to the API
func (o ProviderOutput) Endpoint() pulumi.StringOutput {
	return o.ApplyT(func(v *Provider) pulumi.StringOutput { return v.Endpoint }).(pulumi.StringOutput)
}

// The password. It is very secret.
func (o ProviderOutput) SecretAccessKey() pulumi.StringOutput {
	return o.ApplyT(func(v *Provider) pulumi.StringOutput { return v.SecretAccessKey }).(pulumi.StringOutput)
}

func (o ProviderOutput) Version() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Provider) pulumi.StringPtrOutput { return v.Version }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ProviderInput)(nil)).Elem(), &Provider{})
	pulumi.RegisterOutputType(ProviderOutput{})
}
